CREATE DATABASE CENSUS;
USE CENSUS;

CREATE OR REPLACE TABLE CENSUS.PUBLIC.DATA1(
District VARCHAR(30),
State VARCHAR(30),
Growth DECIMAL(5,2),
Sex_Ratio INT,
Literacy FLOAT
);

CREATE OR REPLACE TABLE CENSUS.PUBLIC.DATA2(
District VARCHAR(30),
State VARCHAR(30),
Area_km2 NUMBER(10,0),
Population NUMBER(10,0)
);

--COUNT ROWS
--TOTAL POPULATION
--AVG POPULATION GROWTH
--AVG SEX RATIO IN INDIA
--AVG LITERACY RATE
--TOP 3 STATES WITH HIGHEST SEX RATIO
--TOP 3 STATES WITH HIGHEST LITERACY RATE
--BOTTOM 3 STATES WITH HIGHEST SEX RATIO
--BOTTOM 3 STATES WITH HIGHEST LITERACY RATE


--COUNT ROWS
SELECT DISTINCT COUNT(*) FROM DATA1;
SELECT DISTINCT COUNT(*) FROM DATA2;

--TOTAL POPULATION
SELECT SUM(POPULATION) AS TOTAL_POPULATION
FROM DATA2;

--AVG POPULATION GROWTH
SELECT
AVG(GROWTH) AS AVG_GROWTH
FROM DATA1;

----AVG SEX RATIO IN INDIA
SELECT
AVG(SEX_RATIO) AS AVG_SEX_RATIO
FROM DATA1;

----AVG LITERACY RATE
SELECT
AVG(LITERACY) AS AVG_LITERACY
FROM DATA1;

--TOP 3 STATES IN SEX RATIO
SELECT
STATE,
SEX_RATIO
FROM DATA1
ORDER BY 2 DESC
LIMIT 3;

--TOP 3 STATES IN LITERACY RATE
SELECT
STATE,
LITERACY
FROM DATA1
ORDER BY 2 DESC
LIMIT 3;

--BOTTOM 3 STATES IN SEX RATIO
SELECT
STATE,
SEX_RATIO
FROM DATA1
ORDER BY SEX_RATIO ASC
LIMIT 3;

--BOTTOM 3 STATES IN LITERACY RATE
SELECT
STATE,
LITERACY
FROM DATA1
ORDER BY LITERACY ASC
LIMIT 3;


-- CREATING TABLE WITH Highest AVG LITERACY
CREATE or replace TABLE TOP_STATES(
STATE VARCHAR(30),
TOPSTATES FLOAT
);

INSERT INTO TOP_STATES
SELECT STATE,
ROUND(AVG(LITERACY),0) 
FROM DATA1
GROUP BY 1
ORDER BY 2 desc;

SELECT * FROM TOP_STATES;

-- CREATING TABLE WITH LOWEST AVG LITERACY
CREATE TABLE BOTTOM_STATES(
STATE VARCHAR(30),
BOTTOMSTATES FLOAT
);

INSERT INTO BOTTOM_STATES
SELECT STATE,
ROUND(AVG(LITERACY),0)
FROM DATA1
GROUP BY 1
ORDER BY 2 ASC;

SELECT * FROM BOTTOM_STATES;

-- UNION 
(SELECT * FROM TOP_STATES
LIMIT 3
)
UNION
(
SELECT * FROM BOTTOM_STATES
LIMIT 3);

--Creating master table 

CREATE OR REPLACE TABLE MASTER_CENSUS AS
SELECT 
DISTINCT 
D1.*,
D2.AREA_KM2,
D2.POPULATION
FROM DATA2 D2
left JOIN DATA1 D1 ON D1.DISTRICT = D2.DISTRICT and D1.STATE = D2.STATE;


SELECT DISTINCT *
FROM MASTER_CENSUS;

-- finding duplicates in data
SELECT 
district,
state,
COUNT(*) AS num_duplicates
FROM MASTER_CENSUS
group by 1,2
HAVING COUNT(*) > 1;

-- REPLACE AND UPDATE DATA
UPDATE MASTER_CENSUS
SET district = 'Khargone'
WHERE district = 'West Nimar';

UPDATE MASTER_CENSUS
SET district = 'Panchmahal'
SET state = 'Gujarat'
WHERE  POPULATION= 2390776
;
UPDATE MASTER_CENSUS
SET state = 'Gujarat'
WHERE  POPULATION= 2390776
;

select * from master_census
where district = 'Panchmahal';

SELECT DISTINCT *
FROM MASTER_CENSUS;
    
-- NUMBER OF MALE & FEMALE IN THE POPULATION
SELECT 
STATE,
SUM(POPULATION),
SUM(num_males),
SUM(num_females)
FROM 
(
SELECT
*,
ROUND(POPULATION / (1+ SEX_RATIO / 1000),0) AS num_males,
ROUND(POPULATION - num_males) AS num_females
FROM MASTER_CENSUS
GROUP BY 1,2,3,4,5,6,7
) GROUP BY STATE;


--LITERATE PEOPLE AND ILLITERATE_PEOPLE

SELECT
STATE,
SUM(LITERATE_PEOPLE) AS LITERATE_POPULATION,
SUM(ILLITERATE_PEOPLE) AS ILLITERATE_PEOPLE
FROM 
(
SELECT
DISTRICT,
STATE,
POPULATION,
ROUND((LITERACY * POPULATION)/100,0)AS LITERATE_PEOPLE,
(POPULATION - LITERATE_PEOPLE) AS ILLITERATE_PEOPLE
FROM MASTER_CENSUS
)GROUP BY 1
;


-- PREVIOUS POPULATION
SELECT
STATE,
SUM(previous_population) AS TOTAL_PREVIOUS_POPULATION
FROM
(
SELECT
DISTRICT,
STATE,
POPULATION,
ROUND(POPULATION / (1+ GROWTH / 100),0)  AS previous_population,
GROWTH
FROM MASTER_CENSUS
)GROUP BY 1;


--TOP 3 DISTRICT FROM EACH STATE
select * from (
SELECT
district,
state,
population,
dense_rank () over(partition by state order by population desc) as rank
FROM MASTER_CENSUS
)
having rank <=3;



